<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Plan de Pruebas" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba_rendimiento_SIPGACAR" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">9</stringProp>
        <stringProp name="ThreadGroup.ramp_time">100</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inicio sesión/graphql-34" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Inicio sesión/graphql-35" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SigninUserMutation&quot;,&quot;variables&quot;:{&quot;email&quot;:&quot;aguerrero@corponarino.gov.co&quot;,&quot;password&quot;:&quot;UserCAR123&quot;},&quot;query&quot;:&quot;query SigninUserMutation($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    message\n    user {\n      id\n      name\n      last_name\n      type_document\n      id\n      group_id\n      email\n      start_date\n      end_date\n      group {\n        id\n        name\n        acronym\n        city {\n          id\n          name\n          __typename\n        }\n        __typename\n      }\n      rols {\n        id\n        name\n        permissions {\n          id\n          name\n          module\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    token {\n      access_token\n      type\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">SigninUserMutation</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query SigninUserMutation($email: String!, $password: String!) {
  login(email: $email, password: $password) {
    message
    user {
      id
      name
      last_name
      type_document
      id
      group_id
      email
      start_date
      end_date
      group {
        id
        name
        acronym
        city {
          id
          name
          __typename
        }
        __typename
      }
      rols {
        id
        name
        permissions {
          id
          name
          module
          __typename
        }
        __typename
      }
      __typename
    }
    token {
      access_token
      type
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;email&quot;:&quot;aguerrero@corponarino.gov.co&quot;,&quot;password&quot;:&quot;UserCAR123&quot;}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Formulacion PAI/graphql-36" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Formulacion PAI/graphql-37" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;allPAIs&quot;,&quot;variables&quot;:{&quot;group_id&quot;:24},&quot;query&quot;:&quot;query allPAIs($group_id: Int, $page: Int) {\n  pais: paisByGroupPag(first: 10, group_id: $group_id, page: $page) {\n    data {\n      id\n      name\n      start_date\n      end_date\n      director_name\n      group_id\n      approved\n      versions {\n        id\n        __typename\n      }\n      group {\n        id\n        name\n        acronym\n        __typename\n      }\n      __typename\n    }\n    paginatorInfo {\n      count\n      currentPage\n      firstItem\n      hasMorePages\n      lastItem\n      lastPage\n      perPage\n      total\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">allPAIs</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query allPAIs($group_id: Int, $page: Int) {
  pais: paisByGroupPag(first: 10, group_id: $group_id, page: $page) {
    data {
      id
      name
      start_date
      end_date
      director_name
      group_id
      approved
      versions {
        id
        __typename
      }
      group {
        id
        name
        acronym
        __typename
      }
      __typename
    }
    paginatorInfo {
      count
      currentPage
      firstItem
      hasMorePages
      lastItem
      lastPage
      perPage
      total
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;group_id&quot;:24}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/graphql-38" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear PAI/graphql-39" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;allPAIs&quot;,&quot;variables&quot;:{&quot;group_id&quot;:24},&quot;query&quot;:&quot;query allPAIs($group_id: Int) {\n  pais: paisByGroup(group_id: $group_id) {\n    id\n    name\n    start_date\n    end_date\n    director_name\n    approved\n    group_id\n    group {\n      id\n      name\n      acronym\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">allPAIs</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query allPAIs($group_id: Int) {
  pais: paisByGroup(group_id: $group_id) {
    id
    name
    start_date
    end_date
    director_name
    approved
    group_id
    group {
      id
      name
      acronym
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;group_id&quot;:24}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear PAI/graphql-40" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;allPAIs&quot;,&quot;variables&quot;:{&quot;group_id&quot;:24},&quot;query&quot;:&quot;query allPAIs($group_id: Int) {\n  pais: paisByGroup(group_id: $group_id) {\n    id\n    name\n    start_date\n    end_date\n    director_name\n    group_id\n    approved\n    versions {\n      id\n      __typename\n    }\n    strategicLines {\n      id\n      name\n      weighing\n      programs {\n        id\n        strategic_line_id\n        national_program_id\n        car_program\n        weighing\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    group {\n      id\n      name\n      acronym\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">allPAIs</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query allPAIs($group_id: Int) {
  pais: paisByGroup(group_id: $group_id) {
    id
    name
    start_date
    end_date
    director_name
    group_id
    approved
    versions {
      id
      __typename
    }
    strategicLines {
      id
      name
      weighing
      programs {
        id
        strategic_line_id
        national_program_id
        car_program
        weighing
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    group {
      id
      name
      acronym
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;group_id&quot;:24}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/graphql-41" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear PAI/graphql-42" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;allPAIs&quot;,&quot;variables&quot;:{&quot;group_id&quot;:24},&quot;query&quot;:&quot;query allPAIs($group_id: Int) {\n  pais: paisByGroup(group_id: $group_id) {\n    id\n    name\n    start_date\n    end_date\n    director_name\n    group_id\n    approved\n    versions {\n      id\n      __typename\n    }\n    strategicLines {\n      id\n      name\n      weighing\n      programs {\n        id\n        strategic_line_id\n        national_program_id\n        car_program\n        weighing\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    group {\n      id\n      name\n      acronym\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">allPAIs</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query allPAIs($group_id: Int) {
  pais: paisByGroup(group_id: $group_id) {
    id
    name
    start_date
    end_date
    director_name
    group_id
    approved
    versions {
      id
      __typename
    }
    strategicLines {
      id
      name
      weighing
      programs {
        id
        strategic_line_id
        national_program_id
        car_program
        weighing
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    group {
      id
      name
      acronym
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;group_id&quot;:24}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-43" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-44" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-45" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-46" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-47" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-48" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-49" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-51" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-50" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-52" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-54" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear PAI/success.txt-53" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar PAI/graphql-55" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar PAI/graphql-56" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar PAI/graphql-58" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createPAI&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;PAI prueba rendiemiento&quot;,&quot;start_date&quot;:&quot;2020-01-01&quot;,&quot;end_date&quot;:&quot;2023-12-31&quot;,&quot;director_name&quot;:&quot;Jorge GEOTEK&quot;,&quot;group_id&quot;:24,&quot;approved&quot;:false,&quot;group&quot;:{},&quot;strategicLines&quot;:[],&quot;versions&quot;:[],&quot;financial_costs&quot;:[],&quot;financial_plans&quot;:[],&quot;indicatorIediValue&quot;:[]},&quot;query&quot;:&quot;mutation createPAI($name: String!, $start_date: String!, $end_date: String!, $director_name: String!, $group_id: Int!, $approved: Boolean!, $version: Int) {\n  createPAI(input: {name: $name, start_date: $start_date, end_date: $end_date, director_name: $director_name, group_id: $group_id, approved: $approved, version: $version}) {\n    id\n    name\n    start_date\n    end_date\n    director_name\n    group_id\n    approved\n    versions {\n      id\n      __typename\n    }\n    strategicLines {\n      id\n      name\n      weighing\n      programs {\n        id\n        strategic_line_id\n        national_program_id\n        car_program\n        weighing\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    group {\n      id\n      name\n      acronym\n      __typename\n    }\n    strategicLines {\n      id\n      name\n      weighing\n      programs {\n        id\n        strategic_line_id\n        national_program_id\n        car_program\n        weighing\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      programs {\n        id\n        strategic_line_id\n        national_program_id\n        car_program\n        weighing\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              indicator_id\n              variable_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              objective {\n                id\n                project_id\n                objective\n                weighing\n                project {\n                  program {\n                    strategicLine {\n                      pai {\n                        id\n                        start_date\n                        end_date\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                objectiveProducts {\n                  id\n                  objective_id\n                  product_id\n                  product_other\n                  goal_1\n                  goal_1_balance\n                  goal_2\n                  goal_2_balance\n                  goal_3\n                  goal_3_balance\n                  goal_4\n                  goal_4_balance\n                  weighing\n                  total_goal\n                  unit_goal\n                  indicator_national_id\n                  indicator_ods_id\n                  national_policy_id\n                  product {\n                    id\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                activities {\n                  id\n                  objective_id\n                  product_id\n                  name\n                  goal\n                  goal_1\n                  goal_2\n                  goal_3\n                  goal_4\n                  weighing\n                  ocde_indicator_id\n                  ocde_category_id\n                  ocdeCategory {\n                    id\n                    name\n                    __typename\n                  }\n                  ocdeIndicator {\n                    id\n                    name\n                    __typename\n                  }\n                  answer_sentence\n                  geometry\n                  __typename\n                }\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              activity_sources {\n                id\n                value\n                evidence_balance\n                goal\n                activity_id\n                source_id\n                age\n                activity {\n                  id\n                  objective_id\n                  product_id\n                  name\n                  goal\n                  goal_1\n                  goal_2\n                  goal_3\n                  goal_4\n                  weighing\n                  ocde_indicator_id\n                  ocde_category_id\n                  indicator_id\n                  variable_id\n                  ocdeCategory {\n                    id\n                    name\n                    __typename\n                  }\n                  objective {\n                    id\n                    project_id\n                    objective\n                    weighing\n                    project {\n                      program {\n                        strategicLine {\n                          pai {\n                            id\n                            start_date\n                            end_date\n                            __typename\n                          }\n                          __typename\n                        }\n                        __typename\n                      }\n                      __typename\n                    }\n                    objectiveProducts {\n                      id\n                      objective_id\n                      product_id\n                      product_other\n                      goal_1\n                      goal_1_balance\n                      goal_2\n                      goal_2_balance\n                      goal_3\n                      goal_3_balance\n                      goal_4\n                      goal_4_balance\n                      weighing\n                      total_goal\n                      unit_goal\n                      indicator_national_id\n                      indicator_ods_id\n                      national_policy_id\n                      product {\n                        id\n                        name\n                        __typename\n                      }\n                      __typename\n                    }\n                    activities {\n                      id\n                      objective_id\n                      product_id\n                      name\n                      goal\n                      goal_1\n                      goal_2\n                      goal_3\n                      goal_4\n                      weighing\n                      ocde_indicator_id\n                      ocde_category_id\n                      ocdeCategory {\n                        id\n                        name\n                        __typename\n                      }\n                      ocdeIndicator {\n                        id\n                        name\n                        __typename\n                      }\n                      answer_sentence\n                      geometry\n                      __typename\n                    }\n                    __typename\n                  }\n                  ocdeIndicator {\n                    id\n                    name\n                    __typename\n                  }\n                  answer_sentence\n                  geometry\n                  __typename\n                }\n                financial_plan {\n                  financing_Source {\n                    id\n                    name\n                    type_id\n                    group_id\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createPAI</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createPAI($name: String!, $start_date: String!, $end_date: String!, $director_name: String!, $group_id: Int!, $approved: Boolean!, $version: Int) {
  createPAI(input: {name: $name, start_date: $start_date, end_date: $end_date, director_name: $director_name, group_id: $group_id, approved: $approved, version: $version}) {
    id
    name
    start_date
    end_date
    director_name
    group_id
    approved
    versions {
      id
      __typename
    }
    strategicLines {
      id
      name
      weighing
      programs {
        id
        strategic_line_id
        national_program_id
        car_program
        weighing
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    group {
      id
      name
      acronym
      __typename
    }
    strategicLines {
      id
      name
      weighing
      programs {
        id
        strategic_line_id
        national_program_id
        car_program
        weighing
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      programs {
        id
        strategic_line_id
        national_program_id
        car_program
        weighing
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          __typename
        }
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              indicator_id
              variable_id
              ocdeCategory {
                id
                name
                __typename
              }
              objective {
                id
                project_id
                objective
                weighing
                project {
                  program {
                    strategicLine {
                      pai {
                        id
                        start_date
                        end_date
                        __typename
                      }
                      __typename
                    }
                    __typename
                  }
                  __typename
                }
                objectiveProducts {
                  id
                  objective_id
                  product_id
                  product_other
                  goal_1
                  goal_1_balance
                  goal_2
                  goal_2_balance
                  goal_3
                  goal_3_balance
                  goal_4
                  goal_4_balance
                  weighing
                  total_goal
                  unit_goal
                  indicator_national_id
                  indicator_ods_id
                  national_policy_id
                  product {
                    id
                    name
                    __typename
                  }
                  __typename
                }
                activities {
                  id
                  objective_id
                  product_id
                  name
                  goal
                  goal_1
                  goal_2
                  goal_3
                  goal_4
                  weighing
                  ocde_indicator_id
                  ocde_category_id
                  ocdeCategory {
                    id
                    name
                    __typename
                  }
                  ocdeIndicator {
                    id
                    name
                    __typename
                  }
                  answer_sentence
                  geometry
                  __typename
                }
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              activity_sources {
                id
                value
                evidence_balance
                goal
                activity_id
                source_id
                age
                activity {
                  id
                  objective_id
                  product_id
                  name
                  goal
                  goal_1
                  goal_2
                  goal_3
                  goal_4
                  weighing
                  ocde_indicator_id
                  ocde_category_id
                  indicator_id
                  variable_id
                  ocdeCategory {
                    id
                    name
                    __typename
                  }
                  objective {
                    id
                    project_id
                    objective
                    weighing
                    project {
                      program {
                        strategicLine {
                          pai {
                            id
                            start_date
                            end_date
                            __typename
                          }
                          __typename
                        }
                        __typename
                      }
                      __typename
                    }
                    objectiveProducts {
                      id
                      objective_id
                      product_id
                      product_other
                      goal_1
                      goal_1_balance
                      goal_2
                      goal_2_balance
                      goal_3
                      goal_3_balance
                      goal_4
                      goal_4_balance
                      weighing
                      total_goal
                      unit_goal
                      indicator_national_id
                      indicator_ods_id
                      national_policy_id
                      product {
                        id
                        name
                        __typename
                      }
                      __typename
                    }
                    activities {
                      id
                      objective_id
                      product_id
                      name
                      goal
                      goal_1
                      goal_2
                      goal_3
                      goal_4
                      weighing
                      ocde_indicator_id
                      ocde_category_id
                      ocdeCategory {
                        id
                        name
                        __typename
                      }
                      ocdeIndicator {
                        id
                        name
                        __typename
                      }
                      answer_sentence
                      geometry
                      __typename
                    }
                    __typename
                  }
                  ocdeIndicator {
                    id
                    name
                    __typename
                  }
                  answer_sentence
                  geometry
                  __typename
                }
                financial_plan {
                  financing_Source {
                    id
                    name
                    type_id
                    group_id
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;PAI prueba rendiemiento&quot;,&quot;start_date&quot;:&quot;2020-01-01&quot;,&quot;end_date&quot;:&quot;2023-12-31&quot;,&quot;director_name&quot;:&quot;Jorge GEOTEK&quot;,&quot;group_id&quot;:24,&quot;approved&quot;:false,&quot;group&quot;:{},&quot;strategicLines&quot;:[],&quot;versions&quot;:[],&quot;financial_costs&quot;:[],&quot;financial_plans&quot;:[],&quot;indicatorIediValue&quot;:[]}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar PAI/graphql-57" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;allPAIs&quot;,&quot;variables&quot;:{&quot;group_id&quot;:24},&quot;query&quot;:&quot;query allPAIs($group_id: Int) {\n  pais: paisByGroup(group_id: $group_id) {\n    id\n    name\n    start_date\n    end_date\n    director_name\n    group_id\n    approved\n    versions {\n      id\n      __typename\n    }\n    strategicLines {\n      id\n      name\n      weighing\n      programs {\n        id\n        strategic_line_id\n        national_program_id\n        car_program\n        weighing\n        projects {\n          id\n          project\n          weighing\n          objectives {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    group {\n      id\n      name\n      acronym\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">allPAIs</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query allPAIs($group_id: Int) {
  pais: paisByGroup(group_id: $group_id) {
    id
    name
    start_date
    end_date
    director_name
    group_id
    approved
    versions {
      id
      __typename
    }
    strategicLines {
      id
      name
      weighing
      programs {
        id
        strategic_line_id
        national_program_id
        car_program
        weighing
        projects {
          id
          project
          weighing
          objectives {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    group {
      id
      name
      acronym
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;group_id&quot;:24}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar PAI/graphql-59" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;allPAIs&quot;,&quot;variables&quot;:{&quot;group_id&quot;:24},&quot;query&quot;:&quot;query allPAIs($group_id: Int, $page: Int) {\n  pais: paisByGroupPag(first: 10, group_id: $group_id, page: $page) {\n    data {\n      id\n      name\n      start_date\n      end_date\n      director_name\n      group_id\n      approved\n      versions {\n        id\n        __typename\n      }\n      group {\n        id\n        name\n        acronym\n        __typename\n      }\n      __typename\n    }\n    paginatorInfo {\n      count\n      currentPage\n      firstItem\n      hasMorePages\n      lastItem\n      lastPage\n      perPage\n      total\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">allPAIs</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query allPAIs($group_id: Int, $page: Int) {
  pais: paisByGroupPag(first: 10, group_id: $group_id, page: $page) {
    data {
      id
      name
      start_date
      end_date
      director_name
      group_id
      approved
      versions {
        id
        __typename
      }
      group {
        id
        name
        acronym
        __typename
      }
      __typename
    }
    paginatorInfo {
      count
      currentPage
      firstItem
      hasMorePages
      lastItem
      lastPage
      perPage
      total
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;group_id&quot;:24}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listar PAI/graphql-60" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Listar PAI/graphql-61" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StrategicLinesByIdPai&quot;,&quot;variables&quot;:{&quot;idPai&quot;:&quot;225&quot;},&quot;query&quot;:&quot;query StrategicLinesByIdPai($idPai: Int!) {\n  strategicLinesByIdPai(input: {p_a_i_id: $idPai}) {\n    id\n    name\n    weighing\n    p_a_i_id\n    pai {\n      id\n      approved\n      __typename\n    }\n    programs {\n      id\n      national_program_id\n      car_program\n      weighing\n      projects {\n        id\n        program_id\n        project\n        weighing\n        objectives {\n          id\n          project_id\n          objective\n          weighing\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            total_goal\n            weighing\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              description\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            weighing\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">StrategicLinesByIdPai</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query StrategicLinesByIdPai($idPai: Int!) {
  strategicLinesByIdPai(input: {p_a_i_id: $idPai}) {
    id
    name
    weighing
    p_a_i_id
    pai {
      id
      approved
      __typename
    }
    programs {
      id
      national_program_id
      car_program
      weighing
      projects {
        id
        program_id
        project
        weighing
        objectives {
          id
          project_id
          objective
          weighing
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            total_goal
            weighing
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              description
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            weighing
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;idPai&quot;:&quot;225&quot;}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar linea/graphql-62" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar linea/graphql-63" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createStrategicLine&quot;,&quot;variables&quot;:{&quot;name&quot;:&quot;Linea prueba rendimiento&quot;,&quot;weighing&quot;:10,&quot;p_a_i_id&quot;:&quot;225&quot;},&quot;query&quot;:&quot;mutation createStrategicLine($name: String!, $weighing: Int!, $p_a_i_id: Int!) {\n  createStrategicLine(input: {name: $name, weighing: $weighing, p_a_i_id: $p_a_i_id}) {\n    id\n    name\n    weighing\n    programs {\n      id\n      strategic_line_id\n      national_program_id\n      car_program\n      weighing\n      projects {\n        id\n        project\n        weighing\n        objectives {\n          id\n          project_id\n          objective\n          weighing\n          project {\n            program {\n              strategicLine {\n                pai {\n                  id\n                  start_date\n                  end_date\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            weighing\n            total_goal\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    programs {\n      id\n      strategic_line_id\n      national_program_id\n      car_program\n      weighing\n      projects {\n        id\n        project\n        weighing\n        objectives {\n          id\n          project_id\n          objective\n          weighing\n          project {\n            program {\n              strategicLine {\n                pai {\n                  id\n                  start_date\n                  end_date\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            weighing\n            total_goal\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      projects {\n        id\n        project\n        weighing\n        objectives {\n          id\n          project_id\n          objective\n          weighing\n          project {\n            program {\n              strategicLine {\n                pai {\n                  id\n                  start_date\n                  end_date\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            weighing\n            total_goal\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          __typename\n        }\n        objectives {\n          id\n          project_id\n          objective\n          weighing\n          project {\n            program {\n              strategicLine {\n                pai {\n                  id\n                  start_date\n                  end_date\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            weighing\n            total_goal\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            indicator_id\n            variable_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            objective {\n              id\n              project_id\n              objective\n              weighing\n              project {\n                program {\n                  strategicLine {\n                    pai {\n                      id\n                      start_date\n                      end_date\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              objectiveProducts {\n                id\n                objective_id\n                product_id\n                product_other\n                goal_1\n                goal_1_balance\n                goal_2\n                goal_2_balance\n                goal_3\n                goal_3_balance\n                goal_4\n                goal_4_balance\n                weighing\n                total_goal\n                unit_goal\n                indicator_national_id\n                indicator_ods_id\n                national_policy_id\n                product {\n                  id\n                  name\n                  __typename\n                }\n                __typename\n              }\n              activities {\n                id\n                objective_id\n                product_id\n                name\n                goal\n                goal_1\n                goal_2\n                goal_3\n                goal_4\n                weighing\n                ocde_indicator_id\n                ocde_category_id\n                ocdeCategory {\n                  id\n                  name\n                  __typename\n                }\n                ocdeIndicator {\n                  id\n                  name\n                  __typename\n                }\n                answer_sentence\n                geometry\n                __typename\n              }\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            activity_sources {\n              id\n              value\n              evidence_balance\n              goal\n              activity_id\n              source_id\n              age\n              activity {\n                id\n                objective_id\n                product_id\n                name\n                goal\n                goal_1\n                goal_2\n                goal_3\n                goal_4\n                weighing\n                ocde_indicator_id\n                ocde_category_id\n                indicator_id\n                variable_id\n                ocdeCategory {\n                  id\n                  name\n                  __typename\n                }\n                objective {\n                  id\n                  project_id\n                  objective\n                  weighing\n                  project {\n                    program {\n                      strategicLine {\n                        pai {\n                          id\n                          start_date\n                          end_date\n                          __typename\n                        }\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  objectiveProducts {\n                    id\n                    objective_id\n                    product_id\n                    product_other\n                    goal_1\n                    goal_1_balance\n                    goal_2\n                    goal_2_balance\n                    goal_3\n                    goal_3_balance\n                    goal_4\n                    goal_4_balance\n                    weighing\n                    total_goal\n                    unit_goal\n                    indicator_national_id\n                    indicator_ods_id\n                    national_policy_id\n                    product {\n                      id\n                      name\n                      __typename\n                    }\n                    __typename\n                  }\n                  activities {\n                    id\n                    objective_id\n                    product_id\n                    name\n                    goal\n                    goal_1\n                    goal_2\n                    goal_3\n                    goal_4\n                    weighing\n                    ocde_indicator_id\n                    ocde_category_id\n                    ocdeCategory {\n                      id\n                      name\n                      __typename\n                    }\n                    ocdeIndicator {\n                      id\n                      name\n                      __typename\n                    }\n                    answer_sentence\n                    geometry\n                    __typename\n                  }\n                  __typename\n                }\n                ocdeIndicator {\n                  id\n                  name\n                  __typename\n                }\n                answer_sentence\n                geometry\n                __typename\n              }\n              financial_plan {\n                financing_Source {\n                  id\n                  name\n                  type_id\n                  group_id\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createStrategicLine</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createStrategicLine($name: String!, $weighing: Int!, $p_a_i_id: Int!) {
  createStrategicLine(input: {name: $name, weighing: $weighing, p_a_i_id: $p_a_i_id}) {
    id
    name
    weighing
    programs {
      id
      strategic_line_id
      national_program_id
      car_program
      weighing
      projects {
        id
        project
        weighing
        objectives {
          id
          project_id
          objective
          weighing
          project {
            program {
              strategicLine {
                pai {
                  id
                  start_date
                  end_date
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            weighing
            total_goal
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            ocdeCategory {
              id
              name
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    programs {
      id
      strategic_line_id
      national_program_id
      car_program
      weighing
      projects {
        id
        project
        weighing
        objectives {
          id
          project_id
          objective
          weighing
          project {
            program {
              strategicLine {
                pai {
                  id
                  start_date
                  end_date
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            weighing
            total_goal
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            ocdeCategory {
              id
              name
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          __typename
        }
        __typename
      }
      projects {
        id
        project
        weighing
        objectives {
          id
          project_id
          objective
          weighing
          project {
            program {
              strategicLine {
                pai {
                  id
                  start_date
                  end_date
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            weighing
            total_goal
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            ocdeCategory {
              id
              name
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          __typename
        }
        objectives {
          id
          project_id
          objective
          weighing
          project {
            program {
              strategicLine {
                pai {
                  id
                  start_date
                  end_date
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            weighing
            total_goal
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            ocdeCategory {
              id
              name
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            indicator_id
            variable_id
            ocdeCategory {
              id
              name
              __typename
            }
            objective {
              id
              project_id
              objective
              weighing
              project {
                program {
                  strategicLine {
                    pai {
                      id
                      start_date
                      end_date
                      __typename
                    }
                    __typename
                  }
                  __typename
                }
                __typename
              }
              objectiveProducts {
                id
                objective_id
                product_id
                product_other
                goal_1
                goal_1_balance
                goal_2
                goal_2_balance
                goal_3
                goal_3_balance
                goal_4
                goal_4_balance
                weighing
                total_goal
                unit_goal
                indicator_national_id
                indicator_ods_id
                national_policy_id
                product {
                  id
                  name
                  __typename
                }
                __typename
              }
              activities {
                id
                objective_id
                product_id
                name
                goal
                goal_1
                goal_2
                goal_3
                goal_4
                weighing
                ocde_indicator_id
                ocde_category_id
                ocdeCategory {
                  id
                  name
                  __typename
                }
                ocdeIndicator {
                  id
                  name
                  __typename
                }
                answer_sentence
                geometry
                __typename
              }
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            activity_sources {
              id
              value
              evidence_balance
              goal
              activity_id
              source_id
              age
              activity {
                id
                objective_id
                product_id
                name
                goal
                goal_1
                goal_2
                goal_3
                goal_4
                weighing
                ocde_indicator_id
                ocde_category_id
                indicator_id
                variable_id
                ocdeCategory {
                  id
                  name
                  __typename
                }
                objective {
                  id
                  project_id
                  objective
                  weighing
                  project {
                    program {
                      strategicLine {
                        pai {
                          id
                          start_date
                          end_date
                          __typename
                        }
                        __typename
                      }
                      __typename
                    }
                    __typename
                  }
                  objectiveProducts {
                    id
                    objective_id
                    product_id
                    product_other
                    goal_1
                    goal_1_balance
                    goal_2
                    goal_2_balance
                    goal_3
                    goal_3_balance
                    goal_4
                    goal_4_balance
                    weighing
                    total_goal
                    unit_goal
                    indicator_national_id
                    indicator_ods_id
                    national_policy_id
                    product {
                      id
                      name
                      __typename
                    }
                    __typename
                  }
                  activities {
                    id
                    objective_id
                    product_id
                    name
                    goal
                    goal_1
                    goal_2
                    goal_3
                    goal_4
                    weighing
                    ocde_indicator_id
                    ocde_category_id
                    ocdeCategory {
                      id
                      name
                      __typename
                    }
                    ocdeIndicator {
                      id
                      name
                      __typename
                    }
                    answer_sentence
                    geometry
                    __typename
                  }
                  __typename
                }
                ocdeIndicator {
                  id
                  name
                  __typename
                }
                answer_sentence
                geometry
                __typename
              }
              financial_plan {
                financing_Source {
                  id
                  name
                  type_id
                  group_id
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;name&quot;:&quot;Linea prueba rendimiento&quot;,&quot;weighing&quot;:10,&quot;p_a_i_id&quot;:&quot;225&quot;}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear programa/graphql-64" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear programa/graphql-65" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;nationalPrograms&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query nationalPrograms {\n  domainFilterByDomain(input: {domain: \&quot;ProgramaDNP\&quot;, state: true}) {\n    id\n    name\n    description\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">nationalPrograms</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query nationalPrograms {
  domainFilterByDomain(input: {domain: &quot;ProgramaDNP&quot;, state: true}) {
    id
    name
    description
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar programa/graphql-66" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar programa/graphql-67" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createProgram&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;&quot;,&quot;strategic_line_id&quot;:253,&quot;national_program_id&quot;:&quot;288&quot;,&quot;car_program&quot;:&quot;Programa rendimiento&quot;,&quot;weighing&quot;:10,&quot;strategicLine&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;weighing&quot;:null,&quot;p_a_i_id&quot;:null,&quot;pai&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;start_date&quot;:&quot;&quot;,&quot;end_date&quot;:&quot;&quot;,&quot;director_name&quot;:&quot;&quot;,&quot;group_id&quot;:1,&quot;approved&quot;:false,&quot;group&quot;:{},&quot;strategicLines&quot;:[],&quot;versions&quot;:[],&quot;financial_costs&quot;:[],&quot;financial_plans&quot;:[],&quot;indicatorIediValue&quot;:[]},&quot;programs&quot;:[]},&quot;projects&quot;:[]},&quot;query&quot;:&quot;mutation createProgram($strategic_line_id: Int!, $national_program_id: Int, $car_program: String, $weighing: Int!) {\n  createProgram(input: {strategic_line_id: $strategic_line_id, national_program_id: $national_program_id, car_program: $car_program, weighing: $weighing}) {\n    id\n    strategic_line_id\n    national_program_id\n    car_program\n    weighing\n    projects {\n      id\n      project\n      weighing\n      objectives {\n        id\n        project_id\n        objective\n        weighing\n        project {\n          program {\n            strategicLine {\n              pai {\n                id\n                start_date\n                end_date\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        objectiveProducts {\n          id\n          objective_id\n          product_id\n          product_other\n          goal_1\n          goal_1_balance\n          goal_2\n          goal_2_balance\n          goal_3\n          goal_3_balance\n          goal_4\n          goal_4_balance\n          weighing\n          total_goal\n          unit_goal\n          indicator_national_id\n          indicator_ods_id\n          national_policy_id\n          product {\n            id\n            name\n            __typename\n          }\n          __typename\n        }\n        activities {\n          id\n          objective_id\n          product_id\n          name\n          goal\n          goal_1\n          goal_2\n          goal_3\n          goal_4\n          weighing\n          ocde_indicator_id\n          ocde_category_id\n          ocdeCategory {\n            id\n            name\n            __typename\n          }\n          ocdeIndicator {\n            id\n            name\n            __typename\n          }\n          answer_sentence\n          geometry\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    projects {\n      id\n      project\n      weighing\n      objectives {\n        id\n        project_id\n        objective\n        weighing\n        project {\n          program {\n            strategicLine {\n              pai {\n                id\n                start_date\n                end_date\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        objectiveProducts {\n          id\n          objective_id\n          product_id\n          product_other\n          goal_1\n          goal_1_balance\n          goal_2\n          goal_2_balance\n          goal_3\n          goal_3_balance\n          goal_4\n          goal_4_balance\n          weighing\n          total_goal\n          unit_goal\n          indicator_national_id\n          indicator_ods_id\n          national_policy_id\n          product {\n            id\n            name\n            __typename\n          }\n          __typename\n        }\n        activities {\n          id\n          objective_id\n          product_id\n          name\n          goal\n          goal_1\n          goal_2\n          goal_3\n          goal_4\n          weighing\n          ocde_indicator_id\n          ocde_category_id\n          ocdeCategory {\n            id\n            name\n            __typename\n          }\n          ocdeIndicator {\n            id\n            name\n            __typename\n          }\n          answer_sentence\n          geometry\n          __typename\n        }\n        __typename\n      }\n      objectives {\n        id\n        project_id\n        objective\n        weighing\n        project {\n          program {\n            strategicLine {\n              pai {\n                id\n                start_date\n                end_date\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        objectiveProducts {\n          id\n          objective_id\n          product_id\n          product_other\n          goal_1\n          goal_1_balance\n          goal_2\n          goal_2_balance\n          goal_3\n          goal_3_balance\n          goal_4\n          goal_4_balance\n          weighing\n          total_goal\n          unit_goal\n          indicator_national_id\n          indicator_ods_id\n          national_policy_id\n          product {\n            id\n            name\n            __typename\n          }\n          __typename\n        }\n        activities {\n          id\n          objective_id\n          product_id\n          name\n          goal\n          goal_1\n          goal_2\n          goal_3\n          goal_4\n          weighing\n          ocde_indicator_id\n          ocde_category_id\n          ocdeCategory {\n            id\n            name\n            __typename\n          }\n          ocdeIndicator {\n            id\n            name\n            __typename\n          }\n          answer_sentence\n          geometry\n          __typename\n        }\n        activities {\n          id\n          objective_id\n          product_id\n          name\n          goal\n          goal_1\n          goal_2\n          goal_3\n          goal_4\n          weighing\n          ocde_indicator_id\n          ocde_category_id\n          indicator_id\n          variable_id\n          ocdeCategory {\n            id\n            name\n            __typename\n          }\n          objective {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          ocdeIndicator {\n            id\n            name\n            __typename\n          }\n          answer_sentence\n          geometry\n          activity_sources {\n            id\n            value\n            evidence_balance\n            goal\n            activity_id\n            source_id\n            age\n            activity {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              indicator_id\n              variable_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              objective {\n                id\n                project_id\n                objective\n                weighing\n                project {\n                  program {\n                    strategicLine {\n                      pai {\n                        id\n                        start_date\n                        end_date\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                objectiveProducts {\n                  id\n                  objective_id\n                  product_id\n                  product_other\n                  goal_1\n                  goal_1_balance\n                  goal_2\n                  goal_2_balance\n                  goal_3\n                  goal_3_balance\n                  goal_4\n                  goal_4_balance\n                  weighing\n                  total_goal\n                  unit_goal\n                  indicator_national_id\n                  indicator_ods_id\n                  national_policy_id\n                  product {\n                    id\n                    name\n                    __typename\n                  }\n                  __typename\n                }\n                activities {\n                  id\n                  objective_id\n                  product_id\n                  name\n                  goal\n                  goal_1\n                  goal_2\n                  goal_3\n                  goal_4\n                  weighing\n                  ocde_indicator_id\n                  ocde_category_id\n                  ocdeCategory {\n                    id\n                    name\n                    __typename\n                  }\n                  ocdeIndicator {\n                    id\n                    name\n                    __typename\n                  }\n                  answer_sentence\n                  geometry\n                  __typename\n                }\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            financial_plan {\n              financing_Source {\n                id\n                name\n                type_id\n                group_id\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createProgram</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createProgram($strategic_line_id: Int!, $national_program_id: Int, $car_program: String, $weighing: Int!) {
  createProgram(input: {strategic_line_id: $strategic_line_id, national_program_id: $national_program_id, car_program: $car_program, weighing: $weighing}) {
    id
    strategic_line_id
    national_program_id
    car_program
    weighing
    projects {
      id
      project
      weighing
      objectives {
        id
        project_id
        objective
        weighing
        project {
          program {
            strategicLine {
              pai {
                id
                start_date
                end_date
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        objectiveProducts {
          id
          objective_id
          product_id
          product_other
          goal_1
          goal_1_balance
          goal_2
          goal_2_balance
          goal_3
          goal_3_balance
          goal_4
          goal_4_balance
          weighing
          total_goal
          unit_goal
          indicator_national_id
          indicator_ods_id
          national_policy_id
          product {
            id
            name
            __typename
          }
          __typename
        }
        activities {
          id
          objective_id
          product_id
          name
          goal
          goal_1
          goal_2
          goal_3
          goal_4
          weighing
          ocde_indicator_id
          ocde_category_id
          ocdeCategory {
            id
            name
            __typename
          }
          ocdeIndicator {
            id
            name
            __typename
          }
          answer_sentence
          geometry
          __typename
        }
        __typename
      }
      __typename
    }
    projects {
      id
      project
      weighing
      objectives {
        id
        project_id
        objective
        weighing
        project {
          program {
            strategicLine {
              pai {
                id
                start_date
                end_date
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        objectiveProducts {
          id
          objective_id
          product_id
          product_other
          goal_1
          goal_1_balance
          goal_2
          goal_2_balance
          goal_3
          goal_3_balance
          goal_4
          goal_4_balance
          weighing
          total_goal
          unit_goal
          indicator_national_id
          indicator_ods_id
          national_policy_id
          product {
            id
            name
            __typename
          }
          __typename
        }
        activities {
          id
          objective_id
          product_id
          name
          goal
          goal_1
          goal_2
          goal_3
          goal_4
          weighing
          ocde_indicator_id
          ocde_category_id
          ocdeCategory {
            id
            name
            __typename
          }
          ocdeIndicator {
            id
            name
            __typename
          }
          answer_sentence
          geometry
          __typename
        }
        __typename
      }
      objectives {
        id
        project_id
        objective
        weighing
        project {
          program {
            strategicLine {
              pai {
                id
                start_date
                end_date
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        objectiveProducts {
          id
          objective_id
          product_id
          product_other
          goal_1
          goal_1_balance
          goal_2
          goal_2_balance
          goal_3
          goal_3_balance
          goal_4
          goal_4_balance
          weighing
          total_goal
          unit_goal
          indicator_national_id
          indicator_ods_id
          national_policy_id
          product {
            id
            name
            __typename
          }
          __typename
        }
        activities {
          id
          objective_id
          product_id
          name
          goal
          goal_1
          goal_2
          goal_3
          goal_4
          weighing
          ocde_indicator_id
          ocde_category_id
          ocdeCategory {
            id
            name
            __typename
          }
          ocdeIndicator {
            id
            name
            __typename
          }
          answer_sentence
          geometry
          __typename
        }
        activities {
          id
          objective_id
          product_id
          name
          goal
          goal_1
          goal_2
          goal_3
          goal_4
          weighing
          ocde_indicator_id
          ocde_category_id
          indicator_id
          variable_id
          ocdeCategory {
            id
            name
            __typename
          }
          objective {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          ocdeIndicator {
            id
            name
            __typename
          }
          answer_sentence
          geometry
          activity_sources {
            id
            value
            evidence_balance
            goal
            activity_id
            source_id
            age
            activity {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              indicator_id
              variable_id
              ocdeCategory {
                id
                name
                __typename
              }
              objective {
                id
                project_id
                objective
                weighing
                project {
                  program {
                    strategicLine {
                      pai {
                        id
                        start_date
                        end_date
                        __typename
                      }
                      __typename
                    }
                    __typename
                  }
                  __typename
                }
                objectiveProducts {
                  id
                  objective_id
                  product_id
                  product_other
                  goal_1
                  goal_1_balance
                  goal_2
                  goal_2_balance
                  goal_3
                  goal_3_balance
                  goal_4
                  goal_4_balance
                  weighing
                  total_goal
                  unit_goal
                  indicator_national_id
                  indicator_ods_id
                  national_policy_id
                  product {
                    id
                    name
                    __typename
                  }
                  __typename
                }
                activities {
                  id
                  objective_id
                  product_id
                  name
                  goal
                  goal_1
                  goal_2
                  goal_3
                  goal_4
                  weighing
                  ocde_indicator_id
                  ocde_category_id
                  ocdeCategory {
                    id
                    name
                    __typename
                  }
                  ocdeIndicator {
                    id
                    name
                    __typename
                  }
                  answer_sentence
                  geometry
                  __typename
                }
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            financial_plan {
              financing_Source {
                id
                name
                type_id
                group_id
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:&quot;&quot;,&quot;strategic_line_id&quot;:253,&quot;national_program_id&quot;:&quot;288&quot;,&quot;car_program&quot;:&quot;Programa rendimiento&quot;,&quot;weighing&quot;:10,&quot;strategicLine&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;weighing&quot;:null,&quot;p_a_i_id&quot;:null,&quot;pai&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;start_date&quot;:&quot;&quot;,&quot;end_date&quot;:&quot;&quot;,&quot;director_name&quot;:&quot;&quot;,&quot;group_id&quot;:1,&quot;approved&quot;:false,&quot;group&quot;:{},&quot;strategicLines&quot;:[],&quot;versions&quot;:[],&quot;financial_costs&quot;:[],&quot;financial_plans&quot;:[],&quot;indicatorIediValue&quot;:[]},&quot;programs&quot;:[]},&quot;projects&quot;:[]}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar proyecto/graphql-68" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar proyecto/graphql-69" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createProject&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;&quot;,&quot;program_id&quot;:&quot;440&quot;,&quot;project&quot;:&quot;Proyecto rendimiento&quot;,&quot;weighing&quot;:10,&quot;program&quot;:{&quot;id&quot;:&quot;&quot;,&quot;strategic_line_id&quot;:null,&quot;national_program_id&quot;:null,&quot;car_program&quot;:null,&quot;weighing&quot;:null,&quot;strategicLine&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;weighing&quot;:null,&quot;p_a_i_id&quot;:null,&quot;pai&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;start_date&quot;:&quot;&quot;,&quot;end_date&quot;:&quot;&quot;,&quot;director_name&quot;:&quot;&quot;,&quot;group_id&quot;:1,&quot;approved&quot;:false,&quot;group&quot;:{},&quot;strategicLines&quot;:[],&quot;versions&quot;:[],&quot;financial_costs&quot;:[],&quot;financial_plans&quot;:[],&quot;indicatorIediValue&quot;:[]},&quot;programs&quot;:[]},&quot;projects&quot;:[]},&quot;objectives&quot;:[]},&quot;query&quot;:&quot;mutation createProject($program_id: Int!, $project: String!, $weighing: Int!) {\n  createProject(input: {program_id: $program_id, project: $project, weighing: $weighing}) {\n    id\n    project\n    weighing\n    objectives {\n      id\n      project_id\n      objective\n      weighing\n      project {\n        program {\n          strategicLine {\n            pai {\n              id\n              start_date\n              end_date\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      objectiveProducts {\n        id\n        objective_id\n        product_id\n        product_other\n        goal_1\n        goal_1_balance\n        goal_2\n        goal_2_balance\n        goal_3\n        goal_3_balance\n        goal_4\n        goal_4_balance\n        weighing\n        total_goal\n        unit_goal\n        indicator_national_id\n        indicator_ods_id\n        national_policy_id\n        product {\n          id\n          name\n          __typename\n        }\n        __typename\n      }\n      activities {\n        id\n        objective_id\n        product_id\n        name\n        goal\n        goal_1\n        goal_2\n        goal_3\n        goal_4\n        weighing\n        ocde_indicator_id\n        ocde_category_id\n        ocdeCategory {\n          id\n          name\n          __typename\n        }\n        ocdeIndicator {\n          id\n          name\n          __typename\n        }\n        answer_sentence\n        geometry\n        __typename\n      }\n      __typename\n    }\n    objectives {\n      id\n      project_id\n      objective\n      weighing\n      project {\n        program {\n          strategicLine {\n            pai {\n              id\n              start_date\n              end_date\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      objectiveProducts {\n        id\n        objective_id\n        product_id\n        product_other\n        goal_1\n        goal_1_balance\n        goal_2\n        goal_2_balance\n        goal_3\n        goal_3_balance\n        goal_4\n        goal_4_balance\n        weighing\n        total_goal\n        unit_goal\n        indicator_national_id\n        indicator_ods_id\n        national_policy_id\n        product {\n          id\n          name\n          __typename\n        }\n        __typename\n      }\n      activities {\n        id\n        objective_id\n        product_id\n        name\n        goal\n        goal_1\n        goal_2\n        goal_3\n        goal_4\n        weighing\n        ocde_indicator_id\n        ocde_category_id\n        ocdeCategory {\n          id\n          name\n          __typename\n        }\n        ocdeIndicator {\n          id\n          name\n          __typename\n        }\n        answer_sentence\n        geometry\n        __typename\n      }\n      activities {\n        id\n        objective_id\n        product_id\n        name\n        goal\n        goal_1\n        goal_2\n        goal_3\n        goal_4\n        weighing\n        ocde_indicator_id\n        ocde_category_id\n        indicator_id\n        variable_id\n        ocdeCategory {\n          id\n          name\n          __typename\n        }\n        objective {\n          id\n          project_id\n          objective\n          weighing\n          project {\n            program {\n              strategicLine {\n                pai {\n                  id\n                  start_date\n                  end_date\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            weighing\n            total_goal\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          __typename\n        }\n        ocdeIndicator {\n          id\n          name\n          __typename\n        }\n        answer_sentence\n        geometry\n        activity_sources {\n          id\n          value\n          evidence_balance\n          goal\n          activity_id\n          source_id\n          age\n          activity {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            indicator_id\n            variable_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            objective {\n              id\n              project_id\n              objective\n              weighing\n              project {\n                program {\n                  strategicLine {\n                    pai {\n                      id\n                      start_date\n                      end_date\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              objectiveProducts {\n                id\n                objective_id\n                product_id\n                product_other\n                goal_1\n                goal_1_balance\n                goal_2\n                goal_2_balance\n                goal_3\n                goal_3_balance\n                goal_4\n                goal_4_balance\n                weighing\n                total_goal\n                unit_goal\n                indicator_national_id\n                indicator_ods_id\n                national_policy_id\n                product {\n                  id\n                  name\n                  __typename\n                }\n                __typename\n              }\n              activities {\n                id\n                objective_id\n                product_id\n                name\n                goal\n                goal_1\n                goal_2\n                goal_3\n                goal_4\n                weighing\n                ocde_indicator_id\n                ocde_category_id\n                ocdeCategory {\n                  id\n                  name\n                  __typename\n                }\n                ocdeIndicator {\n                  id\n                  name\n                  __typename\n                }\n                answer_sentence\n                geometry\n                __typename\n              }\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          financial_plan {\n            financing_Source {\n              id\n              name\n              type_id\n              group_id\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createProject</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createProject($program_id: Int!, $project: String!, $weighing: Int!) {
  createProject(input: {program_id: $program_id, project: $project, weighing: $weighing}) {
    id
    project
    weighing
    objectives {
      id
      project_id
      objective
      weighing
      project {
        program {
          strategicLine {
            pai {
              id
              start_date
              end_date
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      objectiveProducts {
        id
        objective_id
        product_id
        product_other
        goal_1
        goal_1_balance
        goal_2
        goal_2_balance
        goal_3
        goal_3_balance
        goal_4
        goal_4_balance
        weighing
        total_goal
        unit_goal
        indicator_national_id
        indicator_ods_id
        national_policy_id
        product {
          id
          name
          __typename
        }
        __typename
      }
      activities {
        id
        objective_id
        product_id
        name
        goal
        goal_1
        goal_2
        goal_3
        goal_4
        weighing
        ocde_indicator_id
        ocde_category_id
        ocdeCategory {
          id
          name
          __typename
        }
        ocdeIndicator {
          id
          name
          __typename
        }
        answer_sentence
        geometry
        __typename
      }
      __typename
    }
    objectives {
      id
      project_id
      objective
      weighing
      project {
        program {
          strategicLine {
            pai {
              id
              start_date
              end_date
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      objectiveProducts {
        id
        objective_id
        product_id
        product_other
        goal_1
        goal_1_balance
        goal_2
        goal_2_balance
        goal_3
        goal_3_balance
        goal_4
        goal_4_balance
        weighing
        total_goal
        unit_goal
        indicator_national_id
        indicator_ods_id
        national_policy_id
        product {
          id
          name
          __typename
        }
        __typename
      }
      activities {
        id
        objective_id
        product_id
        name
        goal
        goal_1
        goal_2
        goal_3
        goal_4
        weighing
        ocde_indicator_id
        ocde_category_id
        ocdeCategory {
          id
          name
          __typename
        }
        ocdeIndicator {
          id
          name
          __typename
        }
        answer_sentence
        geometry
        __typename
      }
      activities {
        id
        objective_id
        product_id
        name
        goal
        goal_1
        goal_2
        goal_3
        goal_4
        weighing
        ocde_indicator_id
        ocde_category_id
        indicator_id
        variable_id
        ocdeCategory {
          id
          name
          __typename
        }
        objective {
          id
          project_id
          objective
          weighing
          project {
            program {
              strategicLine {
                pai {
                  id
                  start_date
                  end_date
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            weighing
            total_goal
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            ocdeCategory {
              id
              name
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          __typename
        }
        ocdeIndicator {
          id
          name
          __typename
        }
        answer_sentence
        geometry
        activity_sources {
          id
          value
          evidence_balance
          goal
          activity_id
          source_id
          age
          activity {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            indicator_id
            variable_id
            ocdeCategory {
              id
              name
              __typename
            }
            objective {
              id
              project_id
              objective
              weighing
              project {
                program {
                  strategicLine {
                    pai {
                      id
                      start_date
                      end_date
                      __typename
                    }
                    __typename
                  }
                  __typename
                }
                __typename
              }
              objectiveProducts {
                id
                objective_id
                product_id
                product_other
                goal_1
                goal_1_balance
                goal_2
                goal_2_balance
                goal_3
                goal_3_balance
                goal_4
                goal_4_balance
                weighing
                total_goal
                unit_goal
                indicator_national_id
                indicator_ods_id
                national_policy_id
                product {
                  id
                  name
                  __typename
                }
                __typename
              }
              activities {
                id
                objective_id
                product_id
                name
                goal
                goal_1
                goal_2
                goal_3
                goal_4
                weighing
                ocde_indicator_id
                ocde_category_id
                ocdeCategory {
                  id
                  name
                  __typename
                }
                ocdeIndicator {
                  id
                  name
                  __typename
                }
                answer_sentence
                geometry
                __typename
              }
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          financial_plan {
            financing_Source {
              id
              name
              type_id
              group_id
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:&quot;&quot;,&quot;program_id&quot;:&quot;440&quot;,&quot;project&quot;:&quot;Proyecto rendimiento&quot;,&quot;weighing&quot;:10,&quot;program&quot;:{&quot;id&quot;:&quot;&quot;,&quot;strategic_line_id&quot;:null,&quot;national_program_id&quot;:null,&quot;car_program&quot;:null,&quot;weighing&quot;:null,&quot;strategicLine&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;weighing&quot;:null,&quot;p_a_i_id&quot;:null,&quot;pai&quot;:{&quot;id&quot;:&quot;&quot;,&quot;name&quot;:&quot;&quot;,&quot;start_date&quot;:&quot;&quot;,&quot;end_date&quot;:&quot;&quot;,&quot;director_name&quot;:&quot;&quot;,&quot;group_id&quot;:1,&quot;approved&quot;:false,&quot;group&quot;:{},&quot;strategicLines&quot;:[],&quot;versions&quot;:[],&quot;financial_costs&quot;:[],&quot;financial_plans&quot;:[],&quot;indicatorIediValue&quot;:[]},&quot;programs&quot;:[]},&quot;projects&quot;:[]},&quot;objectives&quot;:[]}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear objetivo/graphql-70" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear objetivo/graphql-71" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;AllDomain&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query AllDomain {\n  domains {\n    id\n    domain\n    father_id\n    name\n    description\n    state\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">AllDomain</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query AllDomain {
  domains {
    id
    domain
    father_id
    name
    description
    state
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear objetivo/graphql-72" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productsOfNationalPrograms&quot;,&quot;variables&quot;:{&quot;father_id&quot;:288},&quot;query&quot;:&quot;query productsOfNationalPrograms($father_id: Int!) {\n  domainByFatherId(input: {father_id: $father_id, state: true}) {\n    id\n    name\n    description\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">productsOfNationalPrograms</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query productsOfNationalPrograms($father_id: Int!) {
  domainByFatherId(input: {father_id: $father_id, state: true}) {
    id
    name
    description
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;father_id&quot;:288}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear objetivo/graphql-73" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;nationalIndicators&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query nationalIndicators {\n  domainFilterByDomain(input: {domain: \&quot;IndicadorDNP\&quot;, state: true}) {\n    id\n    name\n    domain\n    father_id\n    description\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">nationalIndicators</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query nationalIndicators {
  domainFilterByDomain(input: {domain: &quot;IndicadorDNP&quot;, state: true}) {
    id
    name
    domain
    father_id
    description
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar objetivo/graphql-74" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar objetivo/graphql-75" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createObjective&quot;,&quot;variables&quot;:{&quot;objective&quot;:&quot;Objetivo rendimiento&quot;,&quot;weighing&quot;:10,&quot;objectiveProducts&quot;:[{&quot;id&quot;:null,&quot;product_id&quot;:&quot;329&quot;,&quot;goal_1&quot;:10,&quot;goal_2&quot;:20,&quot;goal_3&quot;:30,&quot;goal_4&quot;:40,&quot;weighing&quot;:100,&quot;unit_goal&quot;:&quot;30&quot;,&quot;total_goal&quot;:null,&quot;indicator_national_id&quot;:&quot;330&quot;,&quot;indicator_ods_id&quot;:&quot;898&quot;,&quot;national_policy_id&quot;:&quot;880&quot;,&quot;product_other&quot;:&quot;&quot;}],&quot;project_id&quot;:&quot;1138&quot;},&quot;query&quot;:&quot;mutation createObjective($project_id: ID!, $objective: String!, $weighing: Int!) {\n  createObjective(input: {project_id: $project_id, objective: $objective, weighing: $weighing}) {\n    id\n    project_id\n    objective\n    weighing\n    project {\n      program {\n        strategicLine {\n          pai {\n            id\n            start_date\n            end_date\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    objectiveProducts {\n      id\n      objective_id\n      product_id\n      product_other\n      goal_1\n      goal_1_balance\n      goal_2\n      goal_2_balance\n      goal_3\n      goal_3_balance\n      goal_4\n      goal_4_balance\n      weighing\n      total_goal\n      unit_goal\n      indicator_national_id\n      indicator_ods_id\n      national_policy_id\n      product {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    activities {\n      id\n      objective_id\n      product_id\n      name\n      goal\n      goal_1\n      goal_2\n      goal_3\n      goal_4\n      weighing\n      ocde_indicator_id\n      ocde_category_id\n      ocdeCategory {\n        id\n        name\n        __typename\n      }\n      ocdeIndicator {\n        id\n        name\n        __typename\n      }\n      answer_sentence\n      geometry\n      __typename\n    }\n    objectiveProducts {\n      id\n      objective_id\n      product_id\n      product_other\n      goal_1\n      goal_1_balance\n      goal_2\n      goal_2_balance\n      goal_3\n      goal_3_balance\n      goal_4\n      goal_4_balance\n      weighing\n      total_goal\n      unit_goal\n      indicator_national_id\n      indicator_ods_id\n      national_policy_id\n      product {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    activities {\n      id\n      objective_id\n      product_id\n      name\n      goal\n      goal_1\n      goal_2\n      goal_3\n      goal_4\n      weighing\n      ocde_indicator_id\n      ocde_category_id\n      indicator_id\n      variable_id\n      ocdeCategory {\n        id\n        name\n        __typename\n      }\n      objective {\n        id\n        project_id\n        objective\n        weighing\n        project {\n          program {\n            strategicLine {\n              pai {\n                id\n                start_date\n                end_date\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        objectiveProducts {\n          id\n          objective_id\n          product_id\n          product_other\n          goal_1\n          goal_1_balance\n          goal_2\n          goal_2_balance\n          goal_3\n          goal_3_balance\n          goal_4\n          goal_4_balance\n          weighing\n          total_goal\n          unit_goal\n          indicator_national_id\n          indicator_ods_id\n          national_policy_id\n          product {\n            id\n            name\n            __typename\n          }\n          __typename\n        }\n        activities {\n          id\n          objective_id\n          product_id\n          name\n          goal\n          goal_1\n          goal_2\n          goal_3\n          goal_4\n          weighing\n          ocde_indicator_id\n          ocde_category_id\n          ocdeCategory {\n            id\n            name\n            __typename\n          }\n          ocdeIndicator {\n            id\n            name\n            __typename\n          }\n          answer_sentence\n          geometry\n          __typename\n        }\n        __typename\n      }\n      ocdeIndicator {\n        id\n        name\n        __typename\n      }\n      answer_sentence\n      geometry\n      activity_sources {\n        id\n        value\n        evidence_balance\n        goal\n        activity_id\n        source_id\n        age\n        activity {\n          id\n          objective_id\n          product_id\n          name\n          goal\n          goal_1\n          goal_2\n          goal_3\n          goal_4\n          weighing\n          ocde_indicator_id\n          ocde_category_id\n          indicator_id\n          variable_id\n          ocdeCategory {\n            id\n            name\n            __typename\n          }\n          objective {\n            id\n            project_id\n            objective\n            weighing\n            project {\n              program {\n                strategicLine {\n                  pai {\n                    id\n                    start_date\n                    end_date\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            objectiveProducts {\n              id\n              objective_id\n              product_id\n              product_other\n              goal_1\n              goal_1_balance\n              goal_2\n              goal_2_balance\n              goal_3\n              goal_3_balance\n              goal_4\n              goal_4_balance\n              weighing\n              total_goal\n              unit_goal\n              indicator_national_id\n              indicator_ods_id\n              national_policy_id\n              product {\n                id\n                name\n                __typename\n              }\n              __typename\n            }\n            activities {\n              id\n              objective_id\n              product_id\n              name\n              goal\n              goal_1\n              goal_2\n              goal_3\n              goal_4\n              weighing\n              ocde_indicator_id\n              ocde_category_id\n              ocdeCategory {\n                id\n                name\n                __typename\n              }\n              ocdeIndicator {\n                id\n                name\n                __typename\n              }\n              answer_sentence\n              geometry\n              __typename\n            }\n            __typename\n          }\n          ocdeIndicator {\n            id\n            name\n            __typename\n          }\n          answer_sentence\n          geometry\n          __typename\n        }\n        financial_plan {\n          financing_Source {\n            id\n            name\n            type_id\n            group_id\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createObjective</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createObjective($project_id: ID!, $objective: String!, $weighing: Int!) {
  createObjective(input: {project_id: $project_id, objective: $objective, weighing: $weighing}) {
    id
    project_id
    objective
    weighing
    project {
      program {
        strategicLine {
          pai {
            id
            start_date
            end_date
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    objectiveProducts {
      id
      objective_id
      product_id
      product_other
      goal_1
      goal_1_balance
      goal_2
      goal_2_balance
      goal_3
      goal_3_balance
      goal_4
      goal_4_balance
      weighing
      total_goal
      unit_goal
      indicator_national_id
      indicator_ods_id
      national_policy_id
      product {
        id
        name
        __typename
      }
      __typename
    }
    activities {
      id
      objective_id
      product_id
      name
      goal
      goal_1
      goal_2
      goal_3
      goal_4
      weighing
      ocde_indicator_id
      ocde_category_id
      ocdeCategory {
        id
        name
        __typename
      }
      ocdeIndicator {
        id
        name
        __typename
      }
      answer_sentence
      geometry
      __typename
    }
    objectiveProducts {
      id
      objective_id
      product_id
      product_other
      goal_1
      goal_1_balance
      goal_2
      goal_2_balance
      goal_3
      goal_3_balance
      goal_4
      goal_4_balance
      weighing
      total_goal
      unit_goal
      indicator_national_id
      indicator_ods_id
      national_policy_id
      product {
        id
        name
        __typename
      }
      __typename
    }
    activities {
      id
      objective_id
      product_id
      name
      goal
      goal_1
      goal_2
      goal_3
      goal_4
      weighing
      ocde_indicator_id
      ocde_category_id
      indicator_id
      variable_id
      ocdeCategory {
        id
        name
        __typename
      }
      objective {
        id
        project_id
        objective
        weighing
        project {
          program {
            strategicLine {
              pai {
                id
                start_date
                end_date
                __typename
              }
              __typename
            }
            __typename
          }
          __typename
        }
        objectiveProducts {
          id
          objective_id
          product_id
          product_other
          goal_1
          goal_1_balance
          goal_2
          goal_2_balance
          goal_3
          goal_3_balance
          goal_4
          goal_4_balance
          weighing
          total_goal
          unit_goal
          indicator_national_id
          indicator_ods_id
          national_policy_id
          product {
            id
            name
            __typename
          }
          __typename
        }
        activities {
          id
          objective_id
          product_id
          name
          goal
          goal_1
          goal_2
          goal_3
          goal_4
          weighing
          ocde_indicator_id
          ocde_category_id
          ocdeCategory {
            id
            name
            __typename
          }
          ocdeIndicator {
            id
            name
            __typename
          }
          answer_sentence
          geometry
          __typename
        }
        __typename
      }
      ocdeIndicator {
        id
        name
        __typename
      }
      answer_sentence
      geometry
      activity_sources {
        id
        value
        evidence_balance
        goal
        activity_id
        source_id
        age
        activity {
          id
          objective_id
          product_id
          name
          goal
          goal_1
          goal_2
          goal_3
          goal_4
          weighing
          ocde_indicator_id
          ocde_category_id
          indicator_id
          variable_id
          ocdeCategory {
            id
            name
            __typename
          }
          objective {
            id
            project_id
            objective
            weighing
            project {
              program {
                strategicLine {
                  pai {
                    id
                    start_date
                    end_date
                    __typename
                  }
                  __typename
                }
                __typename
              }
              __typename
            }
            objectiveProducts {
              id
              objective_id
              product_id
              product_other
              goal_1
              goal_1_balance
              goal_2
              goal_2_balance
              goal_3
              goal_3_balance
              goal_4
              goal_4_balance
              weighing
              total_goal
              unit_goal
              indicator_national_id
              indicator_ods_id
              national_policy_id
              product {
                id
                name
                __typename
              }
              __typename
            }
            activities {
              id
              objective_id
              product_id
              name
              goal
              goal_1
              goal_2
              goal_3
              goal_4
              weighing
              ocde_indicator_id
              ocde_category_id
              ocdeCategory {
                id
                name
                __typename
              }
              ocdeIndicator {
                id
                name
                __typename
              }
              answer_sentence
              geometry
              __typename
            }
            __typename
          }
          ocdeIndicator {
            id
            name
            __typename
          }
          answer_sentence
          geometry
          __typename
        }
        financial_plan {
          financing_Source {
            id
            name
            type_id
            group_id
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;objective&quot;:&quot;Objetivo rendimiento&quot;,&quot;weighing&quot;:10,&quot;objectiveProducts&quot;:[{&quot;id&quot;:null,&quot;product_id&quot;:&quot;329&quot;,&quot;goal_1&quot;:10,&quot;goal_2&quot;:20,&quot;goal_3&quot;:30,&quot;goal_4&quot;:40,&quot;weighing&quot;:100,&quot;unit_goal&quot;:&quot;30&quot;,&quot;total_goal&quot;:null,&quot;indicator_national_id&quot;:&quot;330&quot;,&quot;indicator_ods_id&quot;:&quot;898&quot;,&quot;national_policy_id&quot;:&quot;880&quot;,&quot;product_other&quot;:&quot;&quot;}],&quot;project_id&quot;:&quot;1138&quot;}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar objetivo/graphql-76" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createObjectiveProducts&quot;,&quot;variables&quot;:{&quot;id&quot;:null,&quot;product_id&quot;:&quot;329&quot;,&quot;goal_1&quot;:10,&quot;goal_2&quot;:20,&quot;goal_3&quot;:30,&quot;goal_4&quot;:40,&quot;weighing&quot;:100,&quot;unit_goal&quot;:&quot;30&quot;,&quot;total_goal&quot;:100,&quot;indicator_national_id&quot;:&quot;330&quot;,&quot;indicator_ods_id&quot;:&quot;898&quot;,&quot;national_policy_id&quot;:&quot;880&quot;,&quot;product_other&quot;:&quot;&quot;,&quot;goal_1_balance&quot;:10,&quot;goal_2_balance&quot;:20,&quot;goal_3_balance&quot;:30,&quot;goal_4_balance&quot;:40,&quot;objective_id&quot;:&quot;1413&quot;},&quot;query&quot;:&quot;mutation createObjectiveProducts($objective_id: ID!, $product_id: Int, $product_other: String, $goal_1: Float, $goal_1_balance: Float, $goal_2: Float, $goal_2_balance: Float, $goal_3: Float, $goal_3_balance: Float, $goal_4: Float, $goal_4_balance: Float, $total_goal: Float!, $weighing: Int!, $unit_goal: Int!, $indicator_national_id: Int, $indicator_ods_id: Int!, $national_policy_id: Int!) {\n  createObjectiveProduct(input: {objective_id: $objective_id, product_id: $product_id, product_other: $product_other, goal_1: $goal_1, goal_1_balance: $goal_1_balance, goal_2: $goal_2, goal_2_balance: $goal_2_balance, goal_3: $goal_3, goal_3_balance: $goal_3_balance, goal_4: $goal_4, goal_4_balance: $goal_4_balance, weighing: $weighing, total_goal: $total_goal, unit_goal: $unit_goal, indicator_national_id: $indicator_national_id, indicator_ods_id: $indicator_ods_id, national_policy_id: $national_policy_id}) {\n    id\n    objective_id\n    product_id\n    product_other\n    goal_1\n    goal_1_balance\n    goal_2\n    goal_2_balance\n    goal_3\n    goal_3_balance\n    goal_4\n    goal_4_balance\n    weighing\n    total_goal\n    unit_goal\n    indicator_national_id\n    indicator_ods_id\n    national_policy_id\n    product {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createObjectiveProducts</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createObjectiveProducts($objective_id: ID!, $product_id: Int, $product_other: String, $goal_1: Float, $goal_1_balance: Float, $goal_2: Float, $goal_2_balance: Float, $goal_3: Float, $goal_3_balance: Float, $goal_4: Float, $goal_4_balance: Float, $total_goal: Float!, $weighing: Int!, $unit_goal: Int!, $indicator_national_id: Int, $indicator_ods_id: Int!, $national_policy_id: Int!) {
  createObjectiveProduct(input: {objective_id: $objective_id, product_id: $product_id, product_other: $product_other, goal_1: $goal_1, goal_1_balance: $goal_1_balance, goal_2: $goal_2, goal_2_balance: $goal_2_balance, goal_3: $goal_3, goal_3_balance: $goal_3_balance, goal_4: $goal_4, goal_4_balance: $goal_4_balance, weighing: $weighing, total_goal: $total_goal, unit_goal: $unit_goal, indicator_national_id: $indicator_national_id, indicator_ods_id: $indicator_ods_id, national_policy_id: $national_policy_id}) {
    id
    objective_id
    product_id
    product_other
    goal_1
    goal_1_balance
    goal_2
    goal_2_balance
    goal_3
    goal_3_balance
    goal_4
    goal_4_balance
    weighing
    total_goal
    unit_goal
    indicator_national_id
    indicator_ods_id
    national_policy_id
    product {
      id
      name
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:null,&quot;product_id&quot;:&quot;329&quot;,&quot;goal_1&quot;:10,&quot;goal_2&quot;:20,&quot;goal_3&quot;:30,&quot;goal_4&quot;:40,&quot;weighing&quot;:100,&quot;unit_goal&quot;:&quot;30&quot;,&quot;total_goal&quot;:100,&quot;indicator_national_id&quot;:&quot;330&quot;,&quot;indicator_ods_id&quot;:&quot;898&quot;,&quot;national_policy_id&quot;:&quot;880&quot;,&quot;product_other&quot;:&quot;&quot;,&quot;goal_1_balance&quot;:10,&quot;goal_2_balance&quot;:20,&quot;goal_3_balance&quot;:30,&quot;goal_4_balance&quot;:40,&quot;objective_id&quot;:&quot;1413&quot;}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Listar objetivo/graphql-77" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Listar objetivo/graphql-78" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;IndicatorsAll&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query IndicatorsAll {\n  Indicators(orderBy: {field: \&quot;id\&quot;, order: ASC}) {\n    id\n    type\n    typeIndicatorDomain {\n      id\n      domain\n      name\n      description\n      __typename\n    }\n    calcule_type\n    calculeTypeDomain {\n      id\n      domain\n      name\n      description\n      __typename\n    }\n    category_type\n    categoryTypeDomain {\n      id\n      domain\n      name\n      description\n      __typename\n    }\n    name\n    abbreviated_name\n    definition\n    url\n    unit_id\n    units {\n      id\n      domain\n      name\n      description\n      __typename\n    }\n    result_name\n    complementary_result\n    complementary_in\n    calcule_in\n    parent_id\n    group_id\n    otherData {\n      id\n      variable_name\n      type\n      value\n      indicator_id\n      typeOtherDataDomain {\n        id\n        domain\n        name\n        description\n        __typename\n      }\n      __typename\n    }\n    files {\n      id\n      file_url\n      name\n      type\n      size\n      indicator_id\n      __typename\n    }\n    variables {\n      id\n      category_name\n      phase_have\n      category_weighing\n      numerator_name\n      abbreviated_numerator\n      numerator_in\n      numeratorIn {\n        id\n        domain\n        name\n        description\n        __typename\n      }\n      denominator_name\n      abbreviated_denominator\n      denominator_in\n      denominatorIn {\n        id\n        domain\n        name\n        description\n        __typename\n      }\n      name_weighing\n      abbreviated_weighing\n      weighing_in\n      weighingIn {\n        id\n        domain\n        name\n        description\n        __typename\n      }\n      indicator_id\n      phases {\n        id\n        name\n        percentage\n        value\n        variable_id\n        __typename\n      }\n      indicador_geodata {\n        id\n        variable_id\n        master_geodata_id\n        master_geodata {\n          id\n          nombre_capa\n          anio\n          url\n          url_metadata\n          descripcion\n          categoria\n          tipo\n          tipo_capa {\n            id\n            domain\n            name\n            description\n            __typename\n          }\n          capa_wms\n          posicion\n          propietario\n          frecuencia_actualizacion\n          frecuenciaActualizacion {\n            id\n            domain\n            name\n            description\n            __typename\n          }\n          campos_geodata {\n            campo\n            alias\n            capa_id\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    indicatorVariable {\n      id\n      type_id\n      type_variable_id\n      indicator_id\n      indicator_variable_id\n      variable_id\n      variable {\n        id\n        __typename\n      }\n      __typename\n    }\n    indicatorAccount {\n      id\n      account_ppta_id\n      account_id\n      financing_source_id\n      indicator_id\n      __typename\n    }\n    indicatorIediVariable {\n      id\n      name\n      abbreviated_name\n      description\n      indicator_id\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">IndicatorsAll</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query IndicatorsAll {
  Indicators(orderBy: {field: &quot;id&quot;, order: ASC}) {
    id
    type
    typeIndicatorDomain {
      id
      domain
      name
      description
      __typename
    }
    calcule_type
    calculeTypeDomain {
      id
      domain
      name
      description
      __typename
    }
    category_type
    categoryTypeDomain {
      id
      domain
      name
      description
      __typename
    }
    name
    abbreviated_name
    definition
    url
    unit_id
    units {
      id
      domain
      name
      description
      __typename
    }
    result_name
    complementary_result
    complementary_in
    calcule_in
    parent_id
    group_id
    otherData {
      id
      variable_name
      type
      value
      indicator_id
      typeOtherDataDomain {
        id
        domain
        name
        description
        __typename
      }
      __typename
    }
    files {
      id
      file_url
      name
      type
      size
      indicator_id
      __typename
    }
    variables {
      id
      category_name
      phase_have
      category_weighing
      numerator_name
      abbreviated_numerator
      numerator_in
      numeratorIn {
        id
        domain
        name
        description
        __typename
      }
      denominator_name
      abbreviated_denominator
      denominator_in
      denominatorIn {
        id
        domain
        name
        description
        __typename
      }
      name_weighing
      abbreviated_weighing
      weighing_in
      weighingIn {
        id
        domain
        name
        description
        __typename
      }
      indicator_id
      phases {
        id
        name
        percentage
        value
        variable_id
        __typename
      }
      indicador_geodata {
        id
        variable_id
        master_geodata_id
        master_geodata {
          id
          nombre_capa
          anio
          url
          url_metadata
          descripcion
          categoria
          tipo
          tipo_capa {
            id
            domain
            name
            description
            __typename
          }
          capa_wms
          posicion
          propietario
          frecuencia_actualizacion
          frecuenciaActualizacion {
            id
            domain
            name
            description
            __typename
          }
          campos_geodata {
            campo
            alias
            capa_id
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    indicatorVariable {
      id
      type_id
      type_variable_id
      indicator_id
      indicator_variable_id
      variable_id
      variable {
        id
        __typename
      }
      __typename
    }
    indicatorAccount {
      id
      account_ppta_id
      account_id
      financing_source_id
      indicator_id
      __typename
    }
    indicatorIediVariable {
      id
      name
      abbreviated_name
      description
      indicator_id
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear actividad/graphql-79" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear actividad/graphql-80" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;FinancialPlanByPaiId&quot;,&quot;variables&quot;:{&quot;p_a_i_id&quot;:225},&quot;query&quot;:&quot;query FinancialPlanByPaiId($p_a_i_id: Int!) {\n  financialPlanByPaiId(input: {p_a_i_id: $p_a_i_id}) {\n    id\n    p_a_i_id\n    source_id\n    value\n    investment_percentage\n    functioning_percentage\n    debt_service_percentage\n    fund_percentage\n    investment\n    functioning\n    debt_service\n    fund\n    investment_balance\n    functioning_balance\n    debt_service_balance\n    fund_balance\n    year\n    financing_Source {\n      id\n      code\n      name\n      final_level\n      type_id\n      group_id\n      __typename\n    }\n    fundraising {\n      value\n      __typename\n    }\n    activity_source {\n      id\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">FinancialPlanByPaiId</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query FinancialPlanByPaiId($p_a_i_id: Int!) {
  financialPlanByPaiId(input: {p_a_i_id: $p_a_i_id}) {
    id
    p_a_i_id
    source_id
    value
    investment_percentage
    functioning_percentage
    debt_service_percentage
    fund_percentage
    investment
    functioning
    debt_service
    fund
    investment_balance
    functioning_balance
    debt_service_balance
    fund_balance
    year
    financing_Source {
      id
      code
      name
      final_level
      type_id
      group_id
      __typename
    }
    fundraising {
      value
      __typename
    }
    activity_source {
      id
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;p_a_i_id&quot;:225}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear actividad/graphql-81" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productsOfNationalPrograms&quot;,&quot;variables&quot;:{&quot;father_id&quot;:288},&quot;query&quot;:&quot;query productsOfNationalPrograms($father_id: Int!) {\n  domainByFatherId(input: {father_id: $father_id, state: true}) {\n    id\n    name\n    description\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">productsOfNationalPrograms</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query productsOfNationalPrograms($father_id: Int!) {
  domainByFatherId(input: {father_id: $father_id, state: true}) {
    id
    name
    description
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;father_id&quot;:288}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Crear actividad/graphql-82" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;unitGoalByID&quot;,&quot;variables&quot;:{&quot;id&quot;:30},&quot;query&quot;:&quot;query unitGoalByID($id: ID!) {\n  domainById(input: {id: $id}) {\n    id\n    name\n    description\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">unitGoalByID</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">query unitGoalByID($id: ID!) {
  domainById(input: {id: $id}) {
    id
    name
    description
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:30}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear actividad/success.txt-83" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear actividad/success.txt-84" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv4" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv4</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Crear actividad/success.txt-85" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipv6" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">ipv6</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">detectportal.firefox.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/success.txt</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Guardar actividad/graphql-86" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar actividad/graphql-87" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createActivity&quot;,&quot;variables&quot;:{&quot;name&quot;:&quot;Actividad rendimiento&quot;,&quot;product_id&quot;:&quot;329&quot;,&quot;indicator_id&quot;:&quot;1&quot;,&quot;answer_sentence&quot;:&quot;&quot;,&quot;geometry&quot;:4,&quot;goal_1&quot;:1,&quot;goal_2&quot;:1,&quot;goal_3&quot;:3,&quot;goal_4&quot;:4,&quot;weighing&quot;:5,&quot;ocde_category_id&quot;:&quot;1171&quot;,&quot;ocde_indicator_id&quot;:&quot;1177&quot;,&quot;variable_id&quot;:&quot;1&quot;,&quot;sourcesAgeOne&quot;:[],&quot;sourcesAgeTwo&quot;:[],&quot;sourcesAgeThree&quot;:[],&quot;sourcesAgeFour&quot;:[],&quot;objective_id&quot;:&quot;1413&quot;,&quot;goal&quot;:9,&quot;indicator_activities&quot;:{&quot;create&quot;:[{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:1,&quot;weighing&quot;:null,&quot;year&quot;:1,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;},{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:2,&quot;weighing&quot;:null,&quot;year&quot;:2,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;},{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:3,&quot;weighing&quot;:null,&quot;year&quot;:3,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;},{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:4,&quot;weighing&quot;:null,&quot;year&quot;:4,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;}],&quot;delete&quot;:[]},&quot;otherDataYear&quot;:{&quot;update&quot;:[],&quot;create&quot;:[],&quot;delete&quot;:[]}},&quot;query&quot;:&quot;mutation createActivity($objective_id: ID!, $product_id: Int!, $name: String!, $weighing: Int!, $goal: Float!, $ocde_indicator_id: ID, $ocde_category_id: ID, $indicator_id: ID, $variable_id: ID, $goal_1: Float, $goal_2: Float, $goal_3: Float, $goal_4: Float, $answer_sentence: String, $geometry: Int, $indicator_activities: CreateActivitiesIndicatorBelongsTo, $otherDataYear: CreateOtherDataYearBelongsTo) {\n  createActivity(input: {objective_id: $objective_id, product_id: $product_id, name: $name, goal: $goal, goal_1: $goal_1, goal_2: $goal_2, goal_3: $goal_3, goal_4: $goal_4, ocde_indicator_id: $ocde_indicator_id, ocde_category_id: $ocde_category_id, indicator_id: $indicator_id, variable_id: $variable_id, weighing: $weighing, answer_sentence: $answer_sentence, geometry: $geometry, indicator_activities: $indicator_activities, otherDataYear: $otherDataYear}) {\n    id\n    objective_id\n    product_id\n    name\n    goal\n    goal_1\n    goal_2\n    goal_3\n    goal_4\n    weighing\n    ocde_indicator_id\n    ocde_category_id\n    indicator_id\n    variable_id\n    ocdeCategory {\n      id\n      name\n      __typename\n    }\n    objective {\n      id\n      project_id\n      objective\n      weighing\n      project {\n        program {\n          strategicLine {\n            pai {\n              id\n              start_date\n              end_date\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      objectiveProducts {\n        id\n        objective_id\n        product_id\n        product_other\n        goal_1\n        goal_1_balance\n        goal_2\n        goal_2_balance\n        goal_3\n        goal_3_balance\n        goal_4\n        goal_4_balance\n        weighing\n        total_goal\n        unit_goal\n        indicator_national_id\n        indicator_ods_id\n        national_policy_id\n        product {\n          id\n          name\n          __typename\n        }\n        __typename\n      }\n      activities {\n        id\n        objective_id\n        product_id\n        name\n        goal\n        goal_1\n        goal_2\n        goal_3\n        goal_4\n        weighing\n        ocde_indicator_id\n        ocde_category_id\n        ocdeCategory {\n          id\n          name\n          __typename\n        }\n        ocdeIndicator {\n          id\n          name\n          __typename\n        }\n        answer_sentence\n        geometry\n        __typename\n      }\n      __typename\n    }\n    ocdeIndicator {\n      id\n      name\n      __typename\n    }\n    answer_sentence\n    geometry\n    activity_sources {\n      id\n      value\n      evidence_balance\n      goal\n      activity_id\n      source_id\n      age\n      activity {\n        id\n        objective_id\n        product_id\n        name\n        goal\n        goal_1\n        goal_2\n        goal_3\n        goal_4\n        weighing\n        ocde_indicator_id\n        ocde_category_id\n        indicator_id\n        variable_id\n        ocdeCategory {\n          id\n          name\n          __typename\n        }\n        objective {\n          id\n          project_id\n          objective\n          weighing\n          project {\n            program {\n              strategicLine {\n                pai {\n                  id\n                  start_date\n                  end_date\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          objectiveProducts {\n            id\n            objective_id\n            product_id\n            product_other\n            goal_1\n            goal_1_balance\n            goal_2\n            goal_2_balance\n            goal_3\n            goal_3_balance\n            goal_4\n            goal_4_balance\n            weighing\n            total_goal\n            unit_goal\n            indicator_national_id\n            indicator_ods_id\n            national_policy_id\n            product {\n              id\n              name\n              __typename\n            }\n            __typename\n          }\n          activities {\n            id\n            objective_id\n            product_id\n            name\n            goal\n            goal_1\n            goal_2\n            goal_3\n            goal_4\n            weighing\n            ocde_indicator_id\n            ocde_category_id\n            ocdeCategory {\n              id\n              name\n              __typename\n            }\n            ocdeIndicator {\n              id\n              name\n              __typename\n            }\n            answer_sentence\n            geometry\n            __typename\n          }\n          __typename\n        }\n        ocdeIndicator {\n          id\n          name\n          __typename\n        }\n        answer_sentence\n        geometry\n        __typename\n      }\n      financial_plan {\n        financing_Source {\n          id\n          name\n          type_id\n          group_id\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    indicator_activities {\n      id\n      numerator\n      denominator\n      weighing\n      result\n      result_completed\n      indicator_id\n      activities_id\n      variable_id\n      year\n      variable_in\n      evidence_id\n      variableIn {\n        id\n        domain\n        father_id\n        name\n        description\n        __typename\n      }\n      variable {\n        id\n        category_name\n        category_weighing\n        numerator_name\n        abbreviated_numerator\n        numerator_in\n        denominator_name\n        abbreviated_denominator\n        denominator_in\n        name_weighing\n        abbreviated_weighing\n        weighing_in\n        indicator_id\n        numeratorIn {\n          id\n          domain\n          __typename\n        }\n        denominatorIn {\n          id\n          domain\n          __typename\n        }\n        weighingIn {\n          id\n          domain\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    otherDataYear {\n      id\n      year\n      value\n      other_data_id\n      activity_id\n      otherData {\n        variable_name\n        type\n        value\n        indicator_id\n        typeOtherDataDomain {\n          id\n          domain\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">createActivity</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation createActivity($objective_id: ID!, $product_id: Int!, $name: String!, $weighing: Int!, $goal: Float!, $ocde_indicator_id: ID, $ocde_category_id: ID, $indicator_id: ID, $variable_id: ID, $goal_1: Float, $goal_2: Float, $goal_3: Float, $goal_4: Float, $answer_sentence: String, $geometry: Int, $indicator_activities: CreateActivitiesIndicatorBelongsTo, $otherDataYear: CreateOtherDataYearBelongsTo) {
  createActivity(input: {objective_id: $objective_id, product_id: $product_id, name: $name, goal: $goal, goal_1: $goal_1, goal_2: $goal_2, goal_3: $goal_3, goal_4: $goal_4, ocde_indicator_id: $ocde_indicator_id, ocde_category_id: $ocde_category_id, indicator_id: $indicator_id, variable_id: $variable_id, weighing: $weighing, answer_sentence: $answer_sentence, geometry: $geometry, indicator_activities: $indicator_activities, otherDataYear: $otherDataYear}) {
    id
    objective_id
    product_id
    name
    goal
    goal_1
    goal_2
    goal_3
    goal_4
    weighing
    ocde_indicator_id
    ocde_category_id
    indicator_id
    variable_id
    ocdeCategory {
      id
      name
      __typename
    }
    objective {
      id
      project_id
      objective
      weighing
      project {
        program {
          strategicLine {
            pai {
              id
              start_date
              end_date
              __typename
            }
            __typename
          }
          __typename
        }
        __typename
      }
      objectiveProducts {
        id
        objective_id
        product_id
        product_other
        goal_1
        goal_1_balance
        goal_2
        goal_2_balance
        goal_3
        goal_3_balance
        goal_4
        goal_4_balance
        weighing
        total_goal
        unit_goal
        indicator_national_id
        indicator_ods_id
        national_policy_id
        product {
          id
          name
          __typename
        }
        __typename
      }
      activities {
        id
        objective_id
        product_id
        name
        goal
        goal_1
        goal_2
        goal_3
        goal_4
        weighing
        ocde_indicator_id
        ocde_category_id
        ocdeCategory {
          id
          name
          __typename
        }
        ocdeIndicator {
          id
          name
          __typename
        }
        answer_sentence
        geometry
        __typename
      }
      __typename
    }
    ocdeIndicator {
      id
      name
      __typename
    }
    answer_sentence
    geometry
    activity_sources {
      id
      value
      evidence_balance
      goal
      activity_id
      source_id
      age
      activity {
        id
        objective_id
        product_id
        name
        goal
        goal_1
        goal_2
        goal_3
        goal_4
        weighing
        ocde_indicator_id
        ocde_category_id
        indicator_id
        variable_id
        ocdeCategory {
          id
          name
          __typename
        }
        objective {
          id
          project_id
          objective
          weighing
          project {
            program {
              strategicLine {
                pai {
                  id
                  start_date
                  end_date
                  __typename
                }
                __typename
              }
              __typename
            }
            __typename
          }
          objectiveProducts {
            id
            objective_id
            product_id
            product_other
            goal_1
            goal_1_balance
            goal_2
            goal_2_balance
            goal_3
            goal_3_balance
            goal_4
            goal_4_balance
            weighing
            total_goal
            unit_goal
            indicator_national_id
            indicator_ods_id
            national_policy_id
            product {
              id
              name
              __typename
            }
            __typename
          }
          activities {
            id
            objective_id
            product_id
            name
            goal
            goal_1
            goal_2
            goal_3
            goal_4
            weighing
            ocde_indicator_id
            ocde_category_id
            ocdeCategory {
              id
              name
              __typename
            }
            ocdeIndicator {
              id
              name
              __typename
            }
            answer_sentence
            geometry
            __typename
          }
          __typename
        }
        ocdeIndicator {
          id
          name
          __typename
        }
        answer_sentence
        geometry
        __typename
      }
      financial_plan {
        financing_Source {
          id
          name
          type_id
          group_id
          __typename
        }
        __typename
      }
      __typename
    }
    indicator_activities {
      id
      numerator
      denominator
      weighing
      result
      result_completed
      indicator_id
      activities_id
      variable_id
      year
      variable_in
      evidence_id
      variableIn {
        id
        domain
        father_id
        name
        description
        __typename
      }
      variable {
        id
        category_name
        category_weighing
        numerator_name
        abbreviated_numerator
        numerator_in
        denominator_name
        abbreviated_denominator
        denominator_in
        name_weighing
        abbreviated_weighing
        weighing_in
        indicator_id
        numeratorIn {
          id
          domain
          __typename
        }
        denominatorIn {
          id
          domain
          __typename
        }
        weighingIn {
          id
          domain
          __typename
        }
        __typename
      }
      __typename
    }
    otherDataYear {
      id
      year
      value
      other_data_id
      activity_id
      otherData {
        variable_name
        type
        value
        indicator_id
        typeOtherDataDomain {
          id
          domain
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;name&quot;:&quot;Actividad rendimiento&quot;,&quot;product_id&quot;:&quot;329&quot;,&quot;indicator_id&quot;:&quot;1&quot;,&quot;answer_sentence&quot;:&quot;&quot;,&quot;geometry&quot;:4,&quot;goal_1&quot;:1,&quot;goal_2&quot;:1,&quot;goal_3&quot;:3,&quot;goal_4&quot;:4,&quot;weighing&quot;:5,&quot;ocde_category_id&quot;:&quot;1171&quot;,&quot;ocde_indicator_id&quot;:&quot;1177&quot;,&quot;variable_id&quot;:&quot;1&quot;,&quot;sourcesAgeOne&quot;:[],&quot;sourcesAgeTwo&quot;:[],&quot;sourcesAgeThree&quot;:[],&quot;sourcesAgeFour&quot;:[],&quot;objective_id&quot;:&quot;1413&quot;,&quot;goal&quot;:9,&quot;indicator_activities&quot;:{&quot;create&quot;:[{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:1,&quot;weighing&quot;:null,&quot;year&quot;:1,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;},{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:2,&quot;weighing&quot;:null,&quot;year&quot;:2,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;},{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:3,&quot;weighing&quot;:null,&quot;year&quot;:3,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;},{&quot;id&quot;:null,&quot;numerator&quot;:null,&quot;denominator&quot;:4,&quot;weighing&quot;:null,&quot;year&quot;:4,&quot;variable_in&quot;:&quot;27&quot;,&quot;indicator_id&quot;:1,&quot;variable_id&quot;:&quot;1&quot;}],&quot;delete&quot;:[]},&quot;otherDataYear&quot;:{&quot;update&quot;:[],&quot;create&quot;:[],&quot;delete&quot;:[]}}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="Guardar actividad/graphql-88" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument" enabled="true">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;editObjectiveProducts&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;4647&quot;,&quot;goal_1&quot;:9,&quot;goal_2&quot;:19,&quot;goal_3&quot;:27,&quot;goal_4&quot;:36},&quot;query&quot;:&quot;mutation editObjectiveProducts($id: ID!, $goal_1: Float, $goal_2: Float, $goal_3: Float, $goal_4: Float) {\n  updateObjectiveProduct(input: {id: $id, goal_1: $goal_1, goal_2: $goal_2, goal_3: $goal_3, goal_4: $goal_4}) {\n    id\n    objective_id\n    product_id\n    product_other\n    goal_1\n    goal_1_balance\n    goal_2\n    goal_2_balance\n    goal_3\n    goal_3_balance\n    goal_4\n    goal_4_balance\n    weighing\n    total_goal\n    unit_goal\n    indicator_national_id\n    indicator_ods_id\n    national_policy_id\n    product {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">test-sipgacar-api.minambiente.gov.co</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/graphql</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="GraphQLHTTPSampler.operationName">editObjectiveProducts</stringProp>
          <stringProp name="GraphQLHTTPSampler.query">mutation editObjectiveProducts($id: ID!, $goal_1: Float, $goal_2: Float, $goal_3: Float, $goal_4: Float) {
  updateObjectiveProduct(input: {id: $id, goal_1: $goal_1, goal_2: $goal_2, goal_3: $goal_3, goal_4: $goal_4}) {
    id
    objective_id
    product_id
    product_other
    goal_1
    goal_1_balance
    goal_2
    goal_2_balance
    goal_3
    goal_3_balance
    goal_4
    goal_4_balance
    weighing
    total_goal
    unit_goal
    indicator_national_id
    indicator_ods_id
    national_policy_id
    product {
      id
      name
      __typename
    }
    __typename
  }
}
</stringProp>
          <stringProp name="GraphQLHTTPSampler.variables">{&quot;id&quot;:&quot;4647&quot;,&quot;goal_1&quot;:9,&quot;goal_2&quot;:19,&quot;goal_3&quot;:27,&quot;goal_4&quot;:36}</stringProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Gestor de Cabecera HTTP" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC90ZXN0LXNpcGdhY2FyLWFwaS5taW5hbWJpZW50ZS5nb3YuY29cL2dyYXBocWwiLCJpYXQiOjE2MjUwNzczMzQsImV4cCI6MTYyNTE2MzczNCwibmJmIjoxNjI1MDc3MzM0LCJqdGkiOiIzRnZnVTl1SEVZdlRLNHljIiwic3ViIjoyOSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.t4HDOrqV8X-YJg2RUTXHU7t0cRz9tyvWKz4b8lgTwZs</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co/</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://test-sipgacar.minambiente.gov.co</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Ver Árbol de Resultados" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Informe Agregado" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Aserción de Duración" enabled="true">
          <stringProp name="DurationAssertion.duration">4000</stringProp>
        </DurationAssertion>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="Servidor Proxy HTTP" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Guardar actividad</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
